+=============================================================+
|                 package: core                               |
+=============================================================+
|  <<Abstract Class>> AbstractKnapsackSolver                  |
|-------------------------------------------------------------|
| - selectedItems: Map <Item, SelectWeight: double>           | <-- To track selected
| - selectedTotalValue: double                                |
|-------------------------------------------------------------|
| + solve(): void                                             | <-- Abstract function
| + getResults(): String                                      |
| + getSelectedItems(): Map < Item, SelectWeight: double>items|
| + selectedTotalValue(): double                              |
+-------------------------------------------------------------+
|                     Knapsack                                |
|-------------------------------------------------------------|
| - knapsackNumber: int                                       |<-- ID for knapsack instance
| - capacity: int                                             |
| - items: List<Item>                                         |
|-------------------------------------------------------------|
| + getKnapsackCapacity(): int                                |
| + getKnapsackNumber(): int                                  |
+-------------------------------------------------------------+

            ^                               ^
            | inherent                      | inherent
+==============================+   +==============================+
| package: fractionalknapsack  |   |     package: knapsackzeroone      |
+==============================+   +==============================+
|  BruteForceFractional        |   |  BruteForce01                |
|------------------------------|   |------------------------------|
| + solve(): void              |   | + solve(): void              |
+------------------------------+   +------------------------------+

|  GreedyFractional            |   |  Greedy01                    |
|------------------------------|   |------------------------------|
| + solve(): void              |   | + solve(): void              |
+------------------------------+   +------------------------------+

|  DynamicFractional (*)       |   |  DynamicProgramming01        |
|------------------------------|   |------------------------------|
| + solve(): void (*)          |   | + solve(): void              |
+------------------------------+   +------------------------------+


+=============================================+
|              package: utils                 |
+=============================================+
|  Item                                       |
|---------------------------------------------|
| - weight: int                               |
| - value: int                                |
|---------------------------------------------|
| + getWeight(): int                          |
| + getValue(): int                           |
| + getRatio(): double                        |
+---------------------------------------------+
|  CSVReader                                  |
|---------------------------------------------|
| + readCSV(String path): Knapsack            |
+---------------------------------------------+
|  CSVWriter                                  |
|---------------------------------------------|
| + writeResults(String path, List<Item>,     |
|   double totalValue, int knapsackNumber,    |
|   int knapsackCapacity): void               |
+---------------------------------------------+
|  Timer                                      |
|---------------------------------------------|
| + start(): void                             |
| + stop(): long                              |
+---------------------------------------------+
